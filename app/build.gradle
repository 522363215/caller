apply plugin: 'com.android.application'

def appName() {
    return "color_phone"
}

android {
    signingConfigs {
        debug {
            keyAlias 'debug'
            keyPassword '000000'
            storeFile file('debug.key')
            storePassword '000000'
        }
        release {
            keyAlias 'colorkey'
            keyPassword '123__color'
            storeFile file('../../key/colorkey.jks')
            storePassword '123__color'
        }
    }

    buildToolsVersion '26.0.2'
    compileSdkVersion 26
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "blocker.call.wallpaper.screen.caller.ringtones.callercolor"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 2
        versionName "1.0.2"
        multiDexEnabled true
    }
    buildTypes {
        release {
            buildConfigField "String", "FLURRY_KEY", "\"PKKRTY7YV3W94DSMV2HV\""
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //将release版本的包名重命名，加上版本及日期
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('release.apk')) {
                        //def fileName = "${variant.productFlavors[0].name}_V${defaultConfig.versionName}_${releaseTime()}.apk"
                        def productFlavorsName = variant.productFlavors[0].name;
//                        def fileName = "${appName()}.V${defaultConfig.versionName}.${releaseTime()}.release."+productFlavorsName+".apk"//with date and version
                        def fileName = "${appName()}-" + productFlavorsName + "-release" + ".apk"
//without date and version
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
        debug {
//            buildConfigField "String", "FLURRY_KEY", "\"PKKRTY7YV3W94DSMV2HV\""
            buildConfigField "String", "FLURRY_KEY", "\"color_phone_test\""
            //_test
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
    productFlavors {
        googleplay {
            manifestPlaceholders = [CHANNEL_VALUE: "gp_new"]
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
        dirs '../cpmindividualsdk/libs', 'libs'
    }
}

dependencies {
    compile project(':callblocksdk')
    compile project(':callflashsetsdk')
    compile project(':callringsdk')
    compile project(':serverflashsdk')
    compile project(':facebook')
    compile project(':cpmindividualsdk')
    compile files('libs/accessoryfiletransfer-v1.0.19.jar')
    compile files('libs/advertisement.jar')
    compile files('libs/GoogleConversionTrackingSdk-2.2.4.jar')
    compile files('libs/jsoup-1.10.2.jar')
    compile files('libs/locSDK_6.23.jar')
    compile files('libs/sdk-v1.0.0.jar')
    compile files('libs/update.jar')
    compile files('libs/android-query.jar')
    compile files('libs/adpriority_1.23_cp.jar')
    compile files('libs/analytics-1.1-cp.jar')
    compile(name: 'AudienceNetwork', ext: 'aar')
    compile(name: 'DuappsAd-HW-v1.1.1.5', ext: 'aar')
    compile(name: 'mopub-sdk-base_3.1.0', ext: 'aar')
    compile(name: 'mopub-sdk-banner_3.0.7', ext: 'aar')
    compile(name: 'mopub-sdk-native-static_3.0.7', ext: 'aar')
    compile(name: 'easyswipe-1.0.4.8', ext: 'aar')
    compile 'com.mopub.volley:mopub-volley:2.0.0'
    compile 'com.android.volley:volley:1.1.0'
    compile 'com.flurry.android:analytics:11.1.1@aar'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.google.firebase:firebase-core:9.6.1'
    compile 'com.google.android.gms:play-services-ads:9.6.1'
    compile 'com.android.support:support-v13:26.0.2'
    compile 'com.android.support:design:26.0.2'
    compile 'com.android.support:support-annotations:26.0.2'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:support-v4:26.0.2'
    compile 'com.android.support:cardview-v7:26.0.0-alpha1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.makeramen:roundedimageview:2.2.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile files('libs/libphonenumber.jar')
    compile project(':wallpaper')
    compile 'com.android.support.constraint:constraint-layout:1.1.2'
}

// firebase
//apply plugin: 'com.google.gms.google-services'
//cp debug apk to debugapk folder
task cpccdebug(type: Copy) {
//    delete '../blockcalldemo/libs/blockcallsdk.aar'
    from('build/outputs/apk/')
    into('../../debugapk/')
    include('app-googleplay-debug.apk')
    rename('app-googleplay-debug.apk', 'colorphone-debug.apk')
}
cpccdebug.dependsOn('assembleDebug')
//
//
////cp release apk to releaseapk folder
task cpccrelease(type: Copy) {
//    delete '../blockcalldemo/libs/blockcallsdk.aar'
    from('build/outputs/apk/')
    into('../../releaseapk/')
    include('color_phone-googleplay-release.apk')
    rename('color_phone-googleplay-release.apk', 'color_phone-release.apk')
}
cpccrelease.dependsOn('assembleRelease')

task cpccchannel(type: Copy) {
    from('build/outputs/apk/') {
        include '*.apk'
    }
    into('../../channelpkg/')
//    rename('app-googleplay-release.apk', 'callerId-release.apk')
}
cpccchannel.dependsOn('assembleRelease')
